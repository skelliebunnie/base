/*
	col-xs-N = mobile size
	col-sm-N = mobile-landscape size
	col-md-N = tablet size
	col-lg-N = desktop size
	col-xl-N = wide size
*/

@include mq($from: 'mobileLandscape') {
	@for $i from 1 through $max-columns {
		.row#{$i}-sm > .col,
		.col-sm-#{$i} {
			flex: 1 0 (100% / $i);
		}
	}
}

@include mq($from: 'tablet') {
<<<<<<< HEAD
	.grid > div, .grid > article, .grid > section {
		grid-column: span 1;
	}
	.row { 
		flex-flow: row wrap;
		&1 > * { width: 100%; }
	}

	@for $i from 12 through 2 {
		.row#{$i} > * { width: 50%; }
	}

	@for $i from 1 through 3 {
		.col-#{$i}-6 { width: 50%; }
	}

	.col {
		&-4-6 { max-width: (4/6) * 100%; }
		&-5-6 { max-width: (5/6) * 100%; }
		&-6-6 { max-width: 100%; }
	}
	@for $i from 1 through 6 {
		.col-#{$i}-12 { max-width: 50%; }
	}
	.col {
		&-4-12 { max-width: (4/12) * 100%; }
		&-5-12 { max-width: (5/12) * 100%; }
		&-6-12 { max-width: 100%; }
=======
	.row {
		flex-flow: row wrap;
		align-items: stretch;
	}

	@for $i from 1 through $max-columns {
		.row#{$i} {
			flex-flow: row wrap;
		}
	}

	@for $i from 1 through ($max-columns / 2) {
		.row#{$i} > .col,
		.col-#{$i} {
			flex: 1 0 100%;
		}
	}

	@for $i from ($max-columns / 2 + 1) through $max-columns {
		.row#{$i} > .col { flex: 1 0 (100% / $i); }
		.col-#{$i} { flex: 1 0 (($i / $max-columns) * 100%); }
	}

	@for $i from 1 through $max-columns {
		.row#{$i}-md > .col { flex: 1 0 (100% / $i); }
		.col-md-#{$i} { flex: 1 0 (($i / $max-columns) * 100%); }
>>>>>>> f905bf266e557ca6c0569d18d08b3613b31dd15f
	}
}

@include mq($from: 'desktop') {
<<<<<<< HEAD
	.grid6,
	.grid5,
	.grid4 { width: 25%; }
	.grid3 { width: 33%; }

	@for $i from 1 through 3 {
		.col-#{$i}-6 { max-width: ($i/6) * 100%; }
	}
	@for $i from 1 through 6 {
		.col-#{$i}-12 { max-width: ($i/12) * 100%; }
=======
	@for $i from 1 through ($max-columns / 2) {
		.row#{$i} > .col { flex: 1 0 (100% / $i); }
		.col-#{$i} { flex: 1 0 (($i / $max-columns) * 100%); }
	}

	@for $i from 1 through $max-columns {
		.row#{$i}-lg > .col{ flex: 1 0 (100% / $i); }
		.col-lg-#{$i} { flex: 1 0 (($i / $max-columns) * 100%); }
>>>>>>> f905bf266e557ca6c0569d18d08b3613b31dd15f
	}
}

@include mq($from: 'wide') {
	@for $i from 1 through $max-columns {
		.row#{$i}-xl > .col { flex: 1 0 (100% / $i); }
		.col-xl-#{$i} { flex: 1 0 (($i / $max-columns) * 100%); }
	}
}