/*
	col-xs-N = mobile size
	col-sm-N = mobile-landscape size
	col-md-N = tablet size
	col-lg-N = desktop size
	col-xl-N = wide size
*/

@include mq($from: 'mobileLandscape') {
	@for $i from 1 through $max-columns {
		.row#{$i}-sm > .col,
		.col-sm-#{$i} {
			flex: 1 0 (100% / $i);
		}
	}
}

@include mq($from: 'tablet') {
	.row {
		flex-flow: row wrap;
		align-items: stretch;
	}

	@for $i from 1 through $max-columns {
		.row#{$i} {
			flex-flow: row wrap;
		}
	}

	@for $i from 1 through ($max-columns / 2) {
		.row#{$i} > .col,
		.col-#{$i} {
			flex: 1 0 100%;
		}
	}

	@for $i from ($max-columns / 2 + 1) through $max-columns {
		.row#{$i} > .col { flex: 1 0 (100% / $i); }
		.col-#{$i} { flex: 1 0 (($i / $max-columns) * 100%); }
	}

	@for $i from 1 through $max-columns {
		.row#{$i}-md > .col { flex: 1 0 (100% / $i); }
		.col-md-#{$i} { flex: 1 0 (($i / $max-columns) * 100%); }
	}
}

@include mq($from: 'desktop') {
	@for $i from 1 through ($max-columns / 2) {
		.row#{$i} > .col { flex: 1 0 (100% / $i); }
		.col-#{$i} { flex: 1 0 (($i / $max-columns) * 100%); }
	}

	@for $i from 1 through $max-columns {
		.row#{$i}-lg > .col{ flex: 1 0 (100% / $i); }
		.col-lg-#{$i} { flex: 1 0 (($i / $max-columns) * 100%); }
	}
}

@include mq($from: 'wide') {
	@for $i from 1 through $max-columns {
		.row#{$i}-xl > .col { flex: 1 0 (100% / $i); }
		.col-xl-#{$i} { flex: 1 0 (($i / $max-columns) * 100%); }
	}
}